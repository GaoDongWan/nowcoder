/*
用两个栈来实现一个队列，完成队列的Push和Pop操作。 
队列中的元素为int类型。
*/
import java.util.Stack;

public class DoubleStack {
	public static void main(String args[]) {
		DoubleStack ds = new DoubleStack();
		ds.push(1);
		ds.push(2);
		System.out.println(ds.pop());
		ds.push(3);
		ds.push(4);
		System.out.println(ds.pop());
		System.out.println(ds.pop());
		System.out.println(ds.pop());
		System.out.println(ds.pop());
	}

	Stack<Integer> stack1 = new Stack<Integer>();
	Stack<Integer> stack2 = new Stack<Integer>();

	public void push(int node) {
		if (!stack2.isEmpty()) {
			int size = stack2.size();
			for (int i = 0; i < size; i++)
				stack1.push(stack2.pop());
		}
		stack1.push(node);
	}

	public int pop() {
		if (stack1.isEmpty() && stack2.isEmpty())
			return -1;
		else {
			if (!stack1.isEmpty()) {
				int size = stack1.size();
				for (int i = 0; i < size; i++) {
					stack2.push(stack1.pop());
				}
			}
			return stack2.pop();
		}
	}
}
