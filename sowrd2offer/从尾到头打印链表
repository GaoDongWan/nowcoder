/*
输入一个链表，从尾到头打印链表每个节点的值。
*/
/**
*    public class ListNode {
*        int val;
*        ListNode next = null;
*
*        ListNode(int val) {
*            this.val = val;
*        }
*    }
*/
//java 递归超简洁版本
import java.util.ArrayList;
public class Solution {
    ArrayList<Integer> arrayList=new ArrayList<Integer>();
    public ArrayList<Integer> printListFromTailToHead(ListNode listNode) {
        if(listNode!=null){
            this.printListFromTailToHead(listNode.next);
            arrayList.add(listNode.val);
        }
        return arrayList;
    }
}  

//栈
import java.util.ArrayList;
import java.util.Stack;
public class Solution {
    public ArrayList<Integer> printListFromTailToHead(ListNode listNode) {
    	ArrayList<Integer> list=new ArrayList<Integer>();
    	Stack<Integer> stack=new Stack<Integer>();
        while(listNode!=null){
        	stack.push(listNode.val);
            listNode=listNode.next;
        }
        while(!stack.isEmpty()){
        	list.add(stack.pop());
        }
        return list;
    }
}
