/*
小易有一个长度为n的整数序列,a_1,...,a_n。然后考虑在一个空序列b上进行n次以下操作:
1、将a_i放入b序列的末尾
2、逆置b序列
小易需要你计算输出操作n次之后的b序列。 

in
输入包括两行,第一行包括一个整数n(2 ≤ n ≤ 2*10^5),即序列的长度。
第二行包括n个整数a_i(1 ≤ a_i ≤ 10^9),即序列a中的每个整数,以空格分割。

out
在一行中输出操作n次之后的b序列,以空格分割,行末无空格。
*/

/*
找规律  也可以不用b[]直接输出
*/
import java.util.Scanner;

public class KongZhiXuLie {
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		while (sc.hasNext()) {
			int n=sc.nextInt();
			int a[]=new int[n];
			int b[]=new int[n];
			for(int i=0;i<n;i++){
				a[i]=sc.nextInt();
			}
			if(n%2==0){
				for(int i=0;i<n/2;i++){
					b[n/2+i]=a[2*i];
					b[i]=a[n-1-2*i];
				}
			}else{
				b[n/2]=a[0];
				for(int i=0;i<n/2;i++){
					b[n/2+i+1]=a[2*i+1];
					b[i]=a[n-1-2*i];
				}
			}
			System.out.print(b[0]);
			for(int i=1;i<n;i++){
				System.out.print(" "+b[i]);
			}
		}
	}
}
